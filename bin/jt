#!/usr/bin/env node

'use strict';

var jt = module.exports = require('../index.js');

var fs = require('fs');
var path = require('path');

function checkJtConfig() {
	var commandDir = path.resolve('./'),
		execuDir;

	commandDir = commandDir.split(path.sep);
	
	while(commandDir.length > 1) {
		execuDir = path.join(commandDir.join(path.sep), '/.jt');

		if(fs.existsSync(execuDir)) {
			return execuDir;
		}
		commandDir.pop();
	}
	return false;
}

function initConfig() {	
	jt.utils.mkdir('./.jt');

	function cpFile() {
		['index.js', 'package.json'].forEach(function(file) {
			var defaultConfig = fs.createReadStream(path.join(jt.root, 'configs/'+file));
			var targetConfig = fs.createWriteStream(path.join('./.jt/', file));
			defaultConfig.pipe(targetConfig, {
				flags: 'w',
				encoding: 'utf-8',
				mode: '755'
			});
		});
	}

	cpFile();
}
// init
jt.commander.command({
	cmd: 'init',
	description: 'init jt config file',
	visible: false,
	handler: function() {
		var fs = require('fs'),
			path = require('path');

		var exist = fs.existsSync('./.jt');
		if(exist) {
			jt.commander.read('  jt config files was existed, override ? (Y/N)', function(data) {
				if(data.toLowerCase() == 'y') {
					initConfig();
					console.log('  Override jt config in '+path.resolve('./.jt'));
				}
			});
		} else {
			initConfig();

			console.log('  Initialized jt config in '+path.resolve('./.jt'));
		}
	}
});
// use jt init command 
var cwd = checkJtConfig();
if(cwd) {
	jt.configDir = cwd;

	try {
		// 尝试读取包信息
		var pack = require(path.join(jt.configDir, 'package.json'));
	} catch(e) {
		// 兼容老的配置方式
		jt.config = require(path.join(jt.configDir, 'config.js'));
		var oldType = true;
	}
	
	if(!oldType) {
		// 新的包配置方式
		require(jt.configDir);
		jt.config.plugins = jt.config.plugins.concat(pack.dependencies || []).concat(pack.devDependencies || []);
	}
	
	jt.init();
	// 执行命令
	jt.commander.run();
} else {
	// parse commander
	if(process.argv[2] == 'init') {
		jt.commander.run(['init']);
	} else {
		console.log('  Fatal error: Unable to find jt\'s config file.');
		console.log('');
		console.log('  If you\'re seeing this message, type "jt init" to initialize your project');
	}

}