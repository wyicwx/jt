#!/usr/bin/env node

'use strict';

var jt = module.exports = require('../lib/kernel.js');

var fs = require('fs');
var path = require('path');

function checkJtConfig() {
	var commandDir = path.resolve('./'),
		execuDir;

	commandDir = commandDir.split(path.sep);
	
	while(commandDir.length > 1) {
		execuDir = path.join(commandDir.join(path.sep), '/.jt');

		if(fs.existsSync(execuDir)) {
			if(fs.existsSync(execuDir + '/config.js')) {
				return execuDir;
			}
		}
		commandDir.pop();
	}
	return false;
}

// init
jt.commander.define({
	cmd: 'init', 
	description: 'init jt config file', 
	handler: function(opt, argv) {
		var fs = require('fs'),
			path = require('path');

		jt.utils.mkdir('.jt/extensions', './');

		function cpFile() {
			['config.js', 'builder.js', 'proxy.js'].forEach(function(file) {
				var defaultConfig = fs.createReadStream(path.join(jt.root, 'configs/'+file));
				var targetConfig = fs.createWriteStream('./.jt/'+file);
				defaultConfig.pipe(targetConfig, {
					flags: 'w',
					encoding: 'utf-8',
					mode: '755'
				});
			});
		}
		if(!fs.existsSync('./.jt/config.js')) {
			cpFile();
		} else {
			jt.utils.read('  config was existed.\n  Are you want override config.js by default? yes(Y) or no(N)', function(reply) {
				if(reply == 'Y') {
					cpFile();
					console.log('  override.');
				}
			});
		}
	}
});

// use jt init command 
if(jt.argv.init) {
	jt.commander.trigger('init');
} else {
	var cwd = checkJtConfig();
	if(cwd) {
		jt.cwd = cwd;
		jt.config = require(path.join(jt.cwd, '/config.js'));
		jt.init();
		jt.run();
	} else {
		console.log('  Fatal error: Unable to find local jt file.');
		console.log('');
		console.log('  If you\'re seeing this message, 你应该用jt init来初始化你的项目');
	}
}