{"name":"Jt","tagline":"辅助开发及半自动化工具集","body":"前端自动化工具 JT\r\n================================\r\n\r\njt底层是一套虚拟文件系统，具有非常强大的扩展能力\r\n\r\n通过processor的方式来扩展底层虚拟文件系统对文件的处理能力\r\n\r\n通过jt提供的接口来支持上层扩展的开发\r\n\r\ngithub 地址: https://github.com/wyicwx/jt\r\n\r\nnpm 地址: https://www.npmjs.org/package/jt-cli\r\n\r\n\r\n安装\r\n------------\r\n\r\n1、必须要有node环境和node包管理npm，最新版本的node自带了npm\r\n\r\n由于jt使用了流的模式来构建底层，不推荐推荐安装0.80以下版本的node\r\n\r\n使用下面的命令查看node版本\r\n\r\n```\r\n$ node -v\r\nv0.10.25\r\n```\r\n\r\n2、使用npm install安装jt\r\n\r\n```\r\n$ npm install -g jt-cli\r\n```\r\n\r\n*请一定加上-g参数，jt的名称为jt-cli请不要打错*\r\n\r\n3、生成配置文件\r\n\r\ncd 到项目根目录下,执行下面命令\r\n\r\n```\r\n$ jt init\r\n```\r\n\r\n该命令会在执行命令的目录下生成一个目录.jt\r\n\r\n4、通过命令运行jt\r\n\r\n```\r\n$ jt \r\n```\r\n\r\n执行后可以看到下面的输出界面\r\n\r\n```\r\nUsage: jt <command>\r\n\r\nCommand:\r\n\r\n  info                          show jt config infomation     \r\n  build                         build project                 \r\n  compress                      js/css file minify compress   \r\n  server                        start proxy server            \r\n\r\nOption:\r\n\r\n  -v,--version  \r\n```\r\n\r\n目录结构\r\n------------\r\n为了和开发目录的代码区分开来，jt使用单独文件夹来包括所有配置文件和扩展包\r\n```\r\n.jt\r\n - index.js    // 配置文件入口，配置文件过大可以在内部require其他文件来拆分\r\n - package.json    // 包文件，目前用处就是来指引jt引用index.js，保留用，后期会和npm搭配\r\n - node_module/    // node包文件，自己开发的模块也存放在这里 \r\n```\r\n文件配置\r\n------------\r\n\r\n一般配置写在index.js内，因为index.js也是js文件，可以通过require函数来引入多个js文件，从而拆分配置文件\r\n```\r\njt.setConfig('base', '../');\r\n```\r\n\r\nsetConfig函数会在jt.config上定义相应的属性，但不推荐直接在jt.config上定义，setConfig会覆盖jt.config默认的值\r\n\r\n下面是默认的jt.config属性\r\n```\r\njt.config = {\r\n\tbase: null, // 项目根目录，支持绝对路径和相对路径，相对路径相对于.jt的目录\r\n\tfs: {\r\n\t\tlist: {},\t// 虚拟文件列表，在这里定义虚拟文件的配置\r\n\t\tignorePath: [] // 忽略目录，同base支持绝对和相对路径\r\n\t},\r\n\tproject: {},  // project，对虚拟文件的一个归类的概念\r\n\tserver: {\r\n\t\tslowSpeedSimulate: {\r\n\t\t\tenable: false,\r\n\t\t\thighWaterMark: 100,\r\n\t\t\tinterval: 10,\r\n\t\t},\r\n\t\tport: 8080,\r\n\t\tdescription: 'default',\r\n\t\tlist: {\r\n\t\t\t'http://([^\\\\/]+)/(.*)js($)': { // 代理匹配规则\r\n\t\t\t\trespond: [\r\n\t\t\t\t\t'$2.js'\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t},\r\n\t\thosts: {} // 自定义host\r\n\t},\r\n\tcompressor: {\t// 压缩器，这里定义了默认的压缩方式，定义多个压缩器，在压缩的时候会全部使用并选择最高的压缩率输出\r\n\t\t'js': {    // 对应js后缀的文件压缩\r\n\t\t\t'jsmin': 'jt-jsmin',   // 压缩器\r\n\t\t\t'uglify': 'jt-uglify'\r\n\t\t},\r\n\t\t'css': { // 对应css后缀的文件压缩\r\n\t\t\t'minicss': 'jt-cssminify'\r\n\t\t}\r\n\t},\r\n\tplugins: []\r\n};\r\n```\r\n\r\n* jt.config.fs.list配置\r\n\r\n通过jt.setConfig来设置fs.list\r\n```\r\nvar list = {};\r\njt.setConfig('fs.list', list);\r\n```\r\n\r\n\r\n1、单个虚拟文件的定义\r\n```\r\nvar DEV_DIR = \"~/dev/\"; // 开发目录和虚拟文件目录尽量不要同一个目录，生成虚拟文件的时候会导致文件覆盖\r\nvar list = {\r\n\t\"js/\": {\r\n\t\t\"libs\": {\r\n\t\t\t'sea.js': [   // 这里定义一个 jt.config.base下 jt/libs/sea.js文件，该文件由下面的数组内的文件合并而成\r\n\t\t\t\tDEV_DIR + 'libs/sea.js'\r\n\t\t\t]\r\n\t}\r\n};\r\njt.setConfig('fs.list', list);\r\n```\r\n\r\njt.config.fs.list下定义的路径都会被自动格式化成完整路径\r\n\r\njt格式化路径会通过判断,key值是否为数组来判断路径是否格式完毕\r\n\r\n上面的配置会格式化成\r\n\r\n```\r\njt.config.fs.list = {\r\n\t\"[jt.config.base]/jt/libs/sea.js\": [\r\n\t\tDEV_DIR + 'libs/sea.js'\r\n\t]\r\n}\r\n```\r\n\r\n[jt.config.base] 是jt.config.base根据本地文件系统格式化成的绝对路径\r\n\r\n2、processor定义\r\n```\r\nvar list = {\r\n\t\"js/\": {\r\n\t\t\"libs\": {\r\n\t\t\t'jquery.js': [\r\n\t\t\t\t{\r\n\t\t\t\t\tprocessor: ['jt-seajs'],    // processor可以定义多个处理器，按定义先后处理\r\n\t\t\t\t\tfile: DEV_DIR + 'libs/jquery.js',    // file指文件路径，允许传入本地文件和虚拟文件\r\n\t\t\t\t\t'jt-seajs': {    // 作为参数传递给jt-seajs\r\n\t\t\t\t\t\tname: 'jquery'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t}\r\n};\r\njt.setConfig('fs.list', list);\r\n```\r\n\r\n也可以通过传递value的方式传递值\r\n```\r\n{\r\n\tprocessor: ['jt-seajs'],\r\n\tvalue: 'alert(321)',\r\n\t'jt-seajs': {\r\n\t\tname: 'jquery'\r\n\t}\r\n}\r\n```\r\n\r\n在file和value同时存在的情况下，file优先级比value高\r\n\r\n3、虚拟文件的引用\r\n\r\n```\r\nvar list = {\r\n\t\"js/\": {\r\n\t\t\"pc\": {\r\n\t\t\t\"page.index.js\": [\r\n\t\t\t\t'./module.share.js', // 引用虚拟文件\r\n\t\t\t\t'./module.slider.js', // 引用虚拟文件\r\n\t\t\t\t'./module.dialog.js', // 引用虚拟文件\r\n\t\t\t\t{\r\n\t\t\t\t\tprocessor: 'jt-seajs',\r\n\t\t\t\t\tfile: DEV_DIR + 'pc/page/index/index.js',\r\n\t\t\t\t\t'jt-seajs': {\r\n\t\t\t\t\t\tdepend: ['jquery', 'tmt', 'module.share'],\r\n\t\t\t\t\t\tname: 'page.index'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"module.share.js\": [\r\n\t\t\t\t{\r\n\t\t\t\t\tprocessor: ['jt-cssminify', 'jt-seajs'],\r\n\t\t\t\t\tfile: DEV_DIR + 'pc/module/share.css',\r\n\t\t\t\t\t'jt-seajs': {\r\n\t\t\t\t\t\ttype: 'string',\r\n\t\t\t\t\t\tname: 'module.share.css'\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tprocessor: ['jt-htmlminify', 'jt-seajs'],\r\n\t\t\t\t\tfile: [\r\n\t\t\t\t\t\tDEV_DIR + 'pc/module/share.html'\r\n\t\t\t\t\t],\r\n\t\t\t\t\t'jt-seajs': {\r\n\t\t\t\t\t\ttype: 'string',\r\n\t\t\t\t\t\tname: 'module.share.html'\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tprocessor: 'jt-seajs',\r\n\t\t\t\t\tfile: DEV_DIR + 'pc/module/share.js',\r\n\t\t\t\t\t'jt-seajs': {\r\n\t\t\t\t\t\ttype: 'function',\r\n\t\t\t\t\t\tdepend: ['jquery'],\r\n\t\t\t\t\t\tname: 'module.share'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"module.dialog.js\": [\r\n\t\t\t\t// 配置\r\n\t\t\t],\r\n\t\t\t\"module.slider.js\": [\r\n\t\t\t\t// 配置\r\n\t\t\t]\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\n可以通过使用相对路径来引用虚拟文件\r\n\r\n\r\n\r\n\r\n\r\n*PS:关于jt.fs.list中路径的说明*\r\n\r\n绝对路径\r\n```\r\n/   相对于本地文件系统的路径\r\n```\r\n相对路径 \r\n```\r\n../ ./   相对当前虚拟文件的路径\r\n\r\n~/   相对jt.base路径\r\n```\r\nwindows同学也必须使用/路径分隔符，而不是使用\\\r\n\r\n* jt.config.server.list的配置\r\n\r\n\r\n\r\n```\r\nvar list = {\r\n\t'http://([^\\\\/]+)/(.*).js($)': { // 用括号包括起来的部分使用js的正则语法，注意\\要用\\\\代替\r\n\t\trespond: [\r\n\t\t\t'$2.js', // $2指代第二个括号匹配的字符，这里的路径同processor的路径处理\r\n\t\t\t{\t\t// 这里允许合并文件 \r\n\t\t\t\tvalue: 'if(window.console){window.console(\"map to local file\")}'\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n};\r\njt.setConfig('server.list', list);\r\n```\r\n\r\n\r\n\r\n基础命令\r\n------------\r\n参看\r\n\r\n* build\r\n\r\n```\r\n$ jt build\r\n```\r\n\r\n* compress\r\n\r\n```\r\n$ jt compress\r\n```\r\n\r\n* server\r\n\r\n```\r\n$ jt server \r\n```\r\n启动代理\r\n```\r\n$ jt server start\r\n```\r\n\r\n\r\n可用process插件\r\n------------\r\n\r\n\r\n[jt-include](https://github.com/wyicwx/jt-include)\r\n\r\n[jt-htmlminify](https://github.com/wyicwx/jt-htmlminify)\r\n\r\n[jt-seajs](https://github.com/wyicwx/jt-seajs)\r\n\r\n[jt-splithtml](https://github.com/wyicwx/jt-splithtml)\r\n\r\n[jt-uglify](https://github.com/wyicwx/jt-uglify)\r\n\r\n[jt-less](https://github.com/wyicwx/jt-less)\r\n\r\n\r\n插件开发\r\n------------\r\n\r\n* 命令行接口开发\r\n\r\n[cmd-interface](https://github.com/wyicwx/cmd-interface)\r\n\r\nto be continued!\r\n\r\n流知识\r\n------------\r\nto be continued!\r\n\r\n\r\n关于\r\n------------\r\n\r\n开发JT的初衷只是为了弥补os x下没有fiddler的autoresponder功能的缺陷，原先只是一个简单的代理程序，但随着应用面不断的扩大，需要应付的场景越来越复杂，于是有了这个项目。","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}